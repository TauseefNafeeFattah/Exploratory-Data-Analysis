# -*- coding: utf-8 -*-
"""API-Data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-JhLjB0niQFlHA2orSBx8nzC6L_5th80
"""

import json 
import pandas as pd
from pandas.io.json import json_normalize
import requests
from tabulate import tabulate
from sklearn.cluster import KMeans
import random
import numpy as np
import folium

url = 'https://discover.search.hereapi.com/v1/discover?in=circle:43.6629,-79.3903;r=10000&q=apartment&apiKey=API_KEY'
data = requests.get(url).json()
d=json_normalize(data['items'])
d.to_csv('apartment.csv')

d2=d[['title','address.label','distance','access','position.lat','position.lng','address.postalCode','contacts','id']]
d2.to_csv('cleaned_apartment.csv')

def getInstitutionCount(search_query, lat, lng, radius):
  url = 'https://discover.search.hereapi.com/v1/discover?in=circle:{},{};r={}&q={}&apiKey=API_KEY'.format(lat, lng, radius, search_query)
  results = requests.get(url).json()
  venues=json_normalize(results['items'])
  return venues['title'].count()

df_final = d2[['position.lat','position.lng']]

CafeList=[]
DepList=[]
GymList=[]
latitudes = list(d2['position.lat'])
longitudes = list( d2['position.lng'])
for lat, lng in zip(latitudes, longitudes):
  CafeList.append(getInstitutionCount('cafe', lat, lng, '1000'))
  DepList.append(getInstitutionCount('department-store', lat, lng, '1000'))
  GymList.append(getInstitutionCount('gym', lat, lng, '1000'))

df_final['Cafes'] = CafeList
df_final['Department Stores'] = DepList
df_final['Gyms'] = GymList

print(tabulate(df_final,headers='keys',tablefmt='github'))

kClusters = 3

kmeans = KMeans(n_clusters=kClusters, random_state=0).fit(df_final)
df_final['Cluster']=kmeans.labels_
df_final['Cluster']=df_final['Cluster'].apply(str)

print(tabulate(df_final,headers='keys',tablefmt='github'))

def color_producer(cluster):
  if cluster == "0":
    return 'green'
  elif cluster == "1":
    return 'orange'
  else:
    return 'red'

map_bom=folium.Map(location=[43.6629,-79.3903],zoom_start=12)
locations = folium.map.FeatureGroup()

latitudes = list(df_final['position.lat'])
longitudes = list(df_final['position.lng'])
labels = list(df_final['Cluster'])
names=list(d2['title'])

for lat, lng, label,names in zip(latitudes, longitudes, labels,names):
    folium.CircleMarker(
            [lat,lng],
            fill=True,
            fill_opacity=1,
            popup=folium.Popup(names, max_width = 300),
            radius=5,
            color=color_producer(label)
        ).add_to(map_bom)

map_bom.add_child(locations)
folium.Marker([19.1334,72.9133],popup='IIT Bombay').add_to(map_bom)

map_bom.save("map-UofT.html")